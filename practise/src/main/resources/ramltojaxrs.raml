#%RAML 1.0 Library
annotationTypes:
    types:
        allowedTargets: [TypeDeclaration,API]
        properties:
            # generated class interface name
            className?:
                type: string
            # generated class implementation name
            implementationClassName?:
                type: string
            # use primitive types instead of boxed types.
            usePrimitiveType?:
                type: boolean
            # is the class abstract.
            abstract?:
                type: boolean
            # classes to be run on type created
            onTypeCreation?: string[]
            # classes to be run on type finished
            onTypeFinish?: string[]
            # classes to be run on type method creation
            onMethodCreation?: string[]
            # classes to be run on type field creation
            onFieldCreation?: string[]


    resources:
        allowedTargets: [Resource, API]
        properties:
            # classes to be run on resource created
            onResourceClassCreation?: string[]
            # classes to be run on resource finished
            onResourceClassFinish?: string[]
    methods:
        allowedTargets: [Method, API]
        properties:
            # classes to be run on resource method created
            onResourceMethodCreation?: string[]
            # classes to be run on resource method created
            onResourceMethodFinish?: string[]
            # classes to be run on response class created
            onResponseClassCreation?: string[]
            # classes to be run on response class created
            onResponseClassFinish?: string[]
    responses:
        allowedTargets: [Response, API]
        properties:
            # classes to be run on response method created
            onResponseMethodCreation?: string[]
            # classes to be run on response method created
            onResponseMethodFinish?: string[]
